# https://kubernetes.io/docs/concepts/workloads/controllers/deployment/
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}-orders
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.name }}-orders
spec:
  selector:
    matchLabels:
      app: {{ .Values.name }}-orders
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: {{ .Values.name }}-orders
      #Â annotation to force pod recreation for every helm upgrade  
      annotations:
        timestamp: {{ now | quote }}
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - {{ .Values.name }}-orders
              topologyKey: kubernetes.io/hostname
            weight: 100
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - {{ .Values.name }}-orders
              topologyKey: failure-domain.beta.kubernetes.io/zone
            weight: 100
      containers:
      - image: {{ .Values.docker.image.orders }}
        imagePullPolicy: {{ .Values.docker.imagePullPolicy }}
        name: orders
        ports:
        - containerPort: 8000
        resources:
          requests:
            memory: 0.5Gi
            cpu: 500m
          limits:
            memory: 1Gi
            cpu: 600m
        envFrom:
        - configMapRef:
            name: {{ .Values.name }}-app-configs
        - secretRef:
            name: {{ .Values.name }}-app-secrets
        readinessProbe:
          httpGet:
            path: /api/health/check
            port: 8000
          failureThreshold: 1
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /api/health/check
            port: 8000
          failureThreshold: 1
          periodSeconds: 10
    